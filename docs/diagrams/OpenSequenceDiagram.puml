@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":QuickCacheParser" as QuickCacheParser LOGIC_COLOR
participant ":OpenCommandParser" as OpenCommandParser LOGIC_COLOR
participant "o:OpenCommand" as OpenCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "lastShownList:ObservableList<Flashcard>" as ObservableList MODEL_COLOR
participant "flashcardToOpen:Flashcard" as Flashcard MODEL_COLOR
end box

[-> LogicManager : execute("open 1")
activate LogicManager

LogicManager -> QuickCacheParser : parseCommand("open 1")
activate QuickCacheParser

create OpenCommandParser
QuickCacheParser -> OpenCommandParser
activate OpenCommandParser

OpenCommandParser --> QuickCacheParser
deactivate OpenCommandParser

QuickCacheParser -> OpenCommandParser : parse(" 1")
activate OpenCommandParser

create OpenCommand
OpenCommandParser -> OpenCommand
activate OpenCommand

OpenCommand --> OpenCommandParser : o
deactivate OpenCommand

OpenCommandParser --> QuickCacheParser: o
deactivate OpenCommandParser

'Hidden arrow to position the destroy marker below the end of the activation bar.
OpenCommandParser -[hidden]-> QuickCacheParser
destroy OpenCommandParser

QuickCacheParser --> LogicManager : o
deactivate QuickCacheParser

LogicManager -> OpenCommand : execute()
activate OpenCommand

OpenCommand -> Model : getFilteredFlashcardList()
activate Model

Model --> OpenCommand : lastShownList
deactivate Model

OpenCommand -> ObservableList : get(0)
activate ObservableList

ObservableList --> OpenCommand : flashcardToOpen
deactivate ObservableList

OpenCommand -> Flashcard : getQuestion()
activate Flashcard

Flashcard --> OpenCommand : question
deactivate Flashcard

OpenCommand --> LogicManager : result
deactivate OpenCommand

[<--LogicManager : result
deactivate LogicManager
destroy OpenCommand
@enduml
